package com.example.carlossmy.midjogaapp.activities;import android.content.Intent;import android.net.ParseException;import android.net.Uri;import android.support.design.widget.Snackbar;import android.support.v4.app.Fragment;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.text.Editable;import android.text.TextWatcher;import android.util.Patterns;import android.view.View;import android.widget.EditText;import android.widget.FrameLayout;import android.widget.TextView;import android.widget.Toast;import android.widget.Toolbar;import com.example.carlossmy.midjogaapp.R;import com.example.carlossmy.midjogaapp.fragments.PaiementInformationFragment;import com.example.carlossmy.midjogaapp.fragments.PaymentConfirmationFragment;import com.example.carlossmy.midjogaapp.retrofit.PaiementClient;import com.example.carlossmy.midjogaapp.retrofit.PayGateClient;import com.example.carlossmy.midjogaapp.retrofit.UserClient;import com.example.carlossmy.midjogaapp.utils.StaticFunctions;import org.json.JSONException;import org.json.JSONObject;import java.io.IOException;import java.util.regex.Pattern;import okhttp3.ResponseBody;import retrofit2.Call;import retrofit2.Callback;import retrofit2.Response;import static com.example.carlossmy.midjogaapp.activities.MainActivity.BEARER;public class PaiementActivity extends AppCompatActivity implements PaiementInformationFragment.OnFragmentInteractionListener {    Toolbar toolbarPaiement;    FrameLayout frame;    public static final Pattern TOGOCEL_PATTERN_1 = Pattern.compile("/9[0-3][0-9][0-9][0-9][0-9][0-9][0-9]/");    public static final Pattern TOGOCEL_PATTERN_2 = Pattern.compile("/70[0-9][0-9][0-9][0-9][0-9][0-9]/");    public static final Pattern MOOV_PATTERN_1 = Pattern.compile("/9[7-9][0-9][0-9][0-9][0-9][0-9][0-9]/");    public static final Pattern MOOV_PATTERN_2 = Pattern.compile("/79[0-9][0-9][0-9][0-9][0-9][0-9]/");    private int cagnotteId,typeId,userId;    private String numb;    private double montant;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_paiement);        cagnotteId = getIntent().getIntExtra(CagnotteActivity.CAGNOTTE_ID,0);        loadFragment(new PaiementInformationFragment());        initViews();        setUsersInformation(LoginActivity.getUserInfo(getApplication(),"token",null));    }    private void initViews(){        android.support.v7.widget.Toolbar toolbar = findViewById(R.id.toolbar_paiement);        toolbar.setTitle("Paiement");        toolbar.setNavigationIcon(R.drawable.ic_keyboard_arrow_left_white_24dp);        toolbar.setNavigationOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent et = new Intent(getApplicationContext(),CagnotteActivity.class);                et.putExtra(CagnotteActivity.CAGNOTTE_ID,cagnotteId);                startActivity(et);            }        });        frame = findViewById(R.id.fragment_container);    }    /*Method to load Fragment*/    private  boolean loadFragment(Fragment fragment) {        //switching fragment        if (fragment != null) {            getSupportFragmentManager()                    .beginTransaction()                    .replace(R.id.fragment_container, fragment)                    .commit();            return true;        }        return false;    }    private void testNumber(String number){        if (number!=null){            if (TOGOCEL_PATTERN_1.matcher(number).matches()||TOGOCEL_PATTERN_2.matcher(number).matches()){                ((TextView)findViewById(R.id.mode)).setText("TOGOCEL");                return;            }            else if((MOOV_PATTERN_1.matcher(number).matches()||MOOV_PATTERN_2.matcher(number).matches())){                ((TextView)findViewById(R.id.mode)).setText("MOOV");                return;            }            else {                ((TextView)findViewById(R.id.mode)).setText("INVALIDE");                return;            }        }        else {            ((TextView)findViewById(R.id.mode)).setText("INVALIDE");            return;        }    }    @Override    public void onFragmentInteraction(Uri uri) {    }    private String getPaygateUrl(String token,double amount,String description,int paiementId){        return "https://paygateglobal.com/v1/page?token="+token+"&amount="+amount+"&description="+description+"&identifier="+paiementId;    }    private void  setUsersInformation(String token){        Call<ResponseBody> call = UserClient                .getInstance()                .getApi()                .getUserProfile(BEARER+token);        call.enqueue(new Callback<ResponseBody>() {            @Override            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {                try {                    JSONObject  jsonObject= new JSONObject(response.body().string());                    if (jsonObject.has("id"))                        userId=jsonObject.getInt("id");                } catch (JSONException e) {                    e.printStackTrace();                } catch (IOException e) {                    e.printStackTrace();                }            }            @Override            public void onFailure(Call<ResponseBody> call, Throwable t) {            }        });    }    @Override    public void payForCagnotte(double amount, int type) {        montant = amount;        typeId=type;        Call<ResponseBody> call = PaiementClient                .getInstance()                .getApi()                .payment(StaticFunctions.DESCRIPTION(cagnotteId),amount,cagnotteId,type,userId);        call.enqueue(new Callback<ResponseBody>() {            @Override            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {                JSONObject json = null;                try {                    json = new JSONObject(response.body().string());                    if (json.has("id")) {                        Intent it = new Intent(getApplicationContext(), PayGateActivity.class);                        it.putExtra("paygate_url", getPaygateUrl(StaticFunctions.AUTH_TOKEN, montant, StaticFunctions.DESCRIPTION(cagnotteId),json.getInt("id")));                        startActivity(it);                    }                    else {                        Snackbar.make(findViewById(R.id.fragment_container),"Problème de connexion, veuillez réessayer",Snackbar.LENGTH_SHORT).show();                        return;                    }                } catch (JSONException e) {                    e.printStackTrace();                    Snackbar.make(findViewById(R.id.fragment_container),"Problème de connexion, veuillez réessayer",Snackbar.LENGTH_SHORT).show();                    return;                } catch (IOException e) {                    e.printStackTrace();                    Snackbar.make(findViewById(R.id.fragment_container),"Problème de connexion, veuillez réessayer",Snackbar.LENGTH_SHORT).show();                }            }            @Override            public void onFailure(Call<ResponseBody> call, Throwable t) {                Snackbar.make(findViewById(R.id.fragment_container),"Problème de connexion, veuillez réessayer",Snackbar.LENGTH_SHORT).show();                return;            }        });    }    @Override    public void modeInteraction(String number) {        testNumber(number);    }}